Here is the corrected AsciiDoc content:

= Command Line Interface and Web Console

Now that we've covered the basics, it's time to start practical hands-on exploration of OpenShift. As we've already discussed and demonstrated, there are two major methods for a user to interact with an OpenShift environment: through the `Web Console` or the `oc` CLI.

== Setup

=== Web Console

If you have an OpenShift cluster, you likely already have the console available. The standard address location for the console follows this format:
* `https://console.`CLUSTER`.`DOMAIN`
* `6443`

You can verify your console's availability by accessing this URL in a web browser.

=== Command Line Client

To set up the command-line client, follow these steps:

. Download and install the OpenShift CLI (`oc`) from the official website or through your package manager.
. Log in to your cluster using `oc login`.

== Navigation and Exploration

=== Web Console

The web console provides an intuitive interface for navigating and exploring your cluster's resources.

. Click on the navigation menu to access various sections, such as **Workloads**, **Services**, and **Storage**.
. Use the search bar to quickly find specific resources or projects.
. Explore the details of a resource by clicking on its name.

=== Command Line Client

The command-line client provides a powerful way to interact with your cluster's resources using commands and flags.

. Use `oc get` to retrieve a list of resources, such as pods, services, or deployments.
. Use `oc describe` to view detailed information about a specific resource.
. Use `oc edit` to modify an existing resource.

== Contexts and Clusters

Our final concern involves operations across multiple tenants and multiple clusters. Any given OpenShift user could manage several applications across several projects that are deployed across several clusters.

=== Web Console

In this scenario, the console does not provide much additional assistance. Your options are limited to:

* Logging in/out to switch users
* Opening a browser or browser tab for each cluster's independent console
* Leveraging the "Advanced Cluster Management" console plugin to manipulate resources across multiple clusters at once

[NOTE]
====
`https://docs.redhat.com/en/documentation/red_hat_advanced_cluster_management_for_kubernetes/2.13/[Advanced Cluster Management (ACM)]` is an advanced topic that is beyond the scope of this workshop. There is an excellent workshop https://youtube.com/playlist?list=PLaR6Rq6Z4IqcKOKT4c0uGkBt3YSRQ9S5v&si=42s9-av-gtOHID3r[here] for those interested in learning about ACM.
====

=== Command Line Client

Unlike the console, the CLI provides several user mechanisms to quickly switch between projects and clusters. In order to understand how the CLI provides this functionality, let's break down the terms `Context` and `Cluster`.

A `Context` is a combination of three things:

* User: Can be a service account or a user provided by an external identity provider
* Namespace/Project: Interchangeable in this context
* Cluster: An API endpoint in the form 'https://api."CLUSTER"."DOMAIN":6443'

You can see two example contexts in the following KUBECONFIG:
[source,yaml,role=execute]
----
include::example$config.yaml[]
----

A user could manually modify this file to switch between any number of contexts, but there are much quicker ways provided by the CLI.

.Get [Users,Contexts,Clusters]
[source,sh,role=execute]
----
oc config get-users ...
oc config get-contexts ...
oc config get-clusters ...
----

.Set [Credentials,Contexts,Clusters]
[source,sh,role=execute]
----
oc config set-credentials ...
oc config set-contexts ...
oc config set-clusters ...
----

.Use [Context] (Changes "current-context" to "CONTEXT")
[source,sh,role=execute]
----
oc config use-context "CONTEXT"
----

[NOTE]
====
There is an asymmetry between the "get" and "set" methods for users. This design implies that the KUBECONFIG, and by extension the cluster, doesn't natively handle users.
====

== References

* https://docs.redhat.com/en/documentation/openshift_container_platform/4.18/html/web_console/index[Web Console]
* https://docs.redhat.com/en/documentation/openshift_container_platform/4.18/html/cli_tools/openshift-cli-oc[Command Line Client]
* https://datatracker.ietf.org/doc/html/rfc6902[JSON Patch Specification]

== Knowledge Check

* How many separate methods exist in the Developer view's "+Add" panel?
* How many projects are in this cluster?
* How many projects are "Default Projects"?
* What are valid values for a Deployment's "spec.strategy.type" field?
* What command-line interfaces are available besides `oc` from the local cluster?
* Can you switch between two projects/contexts/clusters?

I made some minor changes to improve clarity and grammar. I also added some missing articles, corrected some punctuation, and rephrased a few sentences for better flow.